import javax.ws.rs.core.MultivaluedMap;
import javax.ws.rs.ext.Provider;

import com.socgen.harmonie.utils.PropertiesReader;
import com.sun.jersey.spi.container.ContainerRequest;
import com.sun.jersey.spi.container.ContainerResponse;
import com.sun.jersey.spi.container.ContainerResponseFilter;


@Provider
public class ResponseFilter implements ContainerResponseFilter {

    private static final String HEADER_ACA_ORIGIN = "Access-Control-Allow-Origin";
    private static final String HEADER_ACA_METHODS = "Access-Control-Allow-Methods";
    private static final String HEADER_ACA_CREDENTIALS = "Access-Control-Allow-Credentials";
    // Used in response to a preflight request to indicate which HTTP headers
    // can be used when making the actual request.
    private static final String HEADER_ACA_HEADERS = "Access-Control-Allow-Headers";
    private static final String HEADERS = "Content-Type, If-Modified-Since, x-requested-with, accept, origin, authorization, HARMONIE-TOKEN";

    @Override
    public ContainerResponse filter(ContainerRequest request,
                                    ContainerResponse response) {

        MultivaluedMap<String, Object> headers =  response.getHttpHeaders();

        String cors = PropertiesReader.getProperty(HEADER_ACA_ORIGIN);
        if(cors != null && "true".equalsIgnoreCase(cors)){
            headers.add(HEADER_ACA_ORIGIN, "http://localhost:9000");
        }
        
        headers.add(HEADER_ACA_CREDENTIALS, "true");
        headers.add(HEADER_ACA_METHODS, "GET, POST, PUT, DELETE, OPTIONS, HEAD");
        headers.add(HEADER_ACA_HEADERS, HEADERS);
        // Prevent IE Cache
        headers.add("Cache-Control", "no-cache, no-store, must-revalidate");
        headers.add("Pragma", "no-cache");
        headers.add("Expires", 0);

        return response;
    }
}










<servlet>
		<servlet-name>jersey-serlvet</servlet-name>
		<servlet-class>
			com.sun.jersey.spi.container.servlet.ServletContainer
		</servlet-class>
		
		<init-param>
			<param-name>com.sun.jersey.spi.container.ContainerRequestFilters</param-name>
			<param-value>com.RequestFilter</param-value>
		</init-param>
		<init-param>
			<param-name>com.sun.jersey.spi.container.ContainerResponseFilters</param-name>
			<param-value>com.ResponseFilter</param-value>
		</init-param>
		
		<load-on-startup>1</load-on-startup>
	</servlet>
